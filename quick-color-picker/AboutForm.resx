<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        2azIlgAAAABJRU5ErkJggg==
</value>
  </data>
</root>