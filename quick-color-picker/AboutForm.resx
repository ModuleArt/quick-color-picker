<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>